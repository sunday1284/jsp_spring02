<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.buyer.dao.BuyerMapper">
	
	<sql id="searchFrag">
		<trim prefix="WHERE" prefixOverrides="AND">
			<!--페이징이 널이 아니면  -->
			<if test="paging neq null">
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(paging.detailCondition.lprodGu)">
					AND LPROD_GU = #{paging.detailCondition.lprodGu}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(paging.detailCondition.buyerName)">
					AND INSTR(BUYER_NAME, #{paging.detailCondition.buyerName}) > 0
				</if>
			</if>
		</trim>
	</sql>
	
	<select id="selectTotalRecord" resultType="int">
		SELECT COUNT(*)
		FROM BUYER NATURAL JOIN LPROD
		<include refid="searchFrag"/>
	</select>
	
	<select id="selectBuyerList" resultType="BuyerVO">
		WITH ORDERED AS (
		    SELECT 
		    	BUYER_ID
			    ,BUYER_NAME
			    , LPROD_GU "lprod.lprodGu"
			    , LPROD_NM "lprod.lprodNm"
			    , BUYER_ADD1
			    , BUYER_COMTEL
			    , BUYER_MAIL
			    , BUYER_CHARGER
		    FROM BUYER NATURAL JOIN LPROD
		    <include refid="searchFrag"/>
		    ORDER BY BUYER.ROWID DESC
		), ROWBUYER AS (
			SELECT ORDERED.* 
			   , ROWNUM RNUM
			FROM ORDERED
		)
		SELECT *
		FROM ROWBUYER
		<where>		
			<if test="paging neq null">
			<![CDATA[
				RNUM >= #{paging.startRow} AND RNUM <= #{paging.endRow}
			]]>
		</if>
		</where>
	</select>
	<resultMap type="BuyerVO" id="buyerMap" autoMapping="true">
		<!-- buyerId 존재하지 않는 prodVO가 안만들어지려면.. 이렇게 alias로 명시해줘야함 -->
		<id property="buyerId" column="BID"/> 
		<association property="lprod" javaType="LprodVO" autoMapping="true"/>
		<collection property="prodList" ofType="ProdVO" autoMapping="true"></collection>
	</resultMap>
	<select id="selectBuyer" resultMap="buyerMap">
			WITH LPBUYER AS (
			    SELECT 
			    	BUYER_ID AS BID
			    	, BUYER_NAME
			    	, BUYER_BANK
			    	, BUYER_BANKNO
			    	, BUYER_BANKNAME
			    	, BUYER_ZIP
			    	, BUYER_ADD1
			    	, BUYER_ADD2
			    	, BUYER_COMTEL
			    	, BUYER_FAX
			    	, BUYER_MAIL
			    	, BUYER_CHARGER
			    	, BUYER_TELEXT
			    	, BUYER_IMG
			        , LPROD_GU
			        , LPROD_NM
			    FROM BUYER NATURAL JOIN LPROD
			    WHERE BUYER_ID = #{buyerId}
		)
		SELECT
		    LP.*
		    , PROD_ID, PROD_NAME
		    , PROD_COST, PROD_PRICE
		    , PROD_SALE, PROD_MILEAGE
		FROM LPBUYER LP LEFT OUTER JOIN PROD P
		    ON (LP.BID = P.BUYER_ID)
			
	</select>
	<insert id="insertBuyer">
		<selectKey order="BEFORE" resultType="string" keyProperty="buyerId">
			SELECT  
			    #{lprodGu}||
			    LPAD(NVL(TO_NUMBER(SUBSTR(MAX(BUYER_ID), 5)), 0) + 1, 2, '0')
			FROM BUYER
			WHERE LPROD_GU = #{lprodGu}
		</selectKey>
	
		INSERT INTO BUYER (
		    BUYER_ID,
		    BUYER_NAME,
		    LPROD_GU,
		    BUYER_BANK,
		    BUYER_BANKNO,
		    BUYER_BANKNAME,
		    BUYER_ZIP,
		    BUYER_ADD1,
		    BUYER_ADD2,
		    BUYER_COMTEL,
		    BUYER_FAX,
		    BUYER_MAIL,
		    BUYER_CHARGER,
		    BUYER_TELEXT,
		    BUYER_IMG
		) VALUES (
			 #{buyerId,jdbcType=CHAR}
			, #{buyerName,jdbcType=VARCHAR}
			, #{lprodGu,jdbcType=CHAR}
			, #{buyerBank,jdbcType=VARCHAR}
			, #{buyerBankno,jdbcType=VARCHAR}
			, #{buyerBankname,jdbcType=VARCHAR}
			, #{buyerZip,jdbcType=CHAR}
			, #{buyerAdd1,jdbcType=VARCHAR}
			, #{buyerAdd2,jdbcType=VARCHAR}
			, #{buyerComtel,jdbcType=VARCHAR}
			, #{buyerFax,jdbcType=VARCHAR}
			, #{buyerMail,jdbcType=VARCHAR}
			, #{buyerCharger,jdbcType=VARCHAR}
			, #{buyerTelext,jdbcType=VARCHAR}
			, #{buyerImg,jdbcType=VARCHAR}
		)
	</insert>
	
</mapper>